/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M18
 * Generated at: 2017-04-21 05:56:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import codes.DBConnection;
import codes.UserCredentials;
import java.sql.*;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Document;
import com.itextpdf.text.Image;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Chunk;
import java.util.Date;
import com.itextpdf.text.Element;

public final class PaymentCard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.OutputStream");
    _jspx_imports_classes.add("codes.DBConnection");
    _jspx_imports_classes.add("com.itextpdf.text.pdf.PdfPCell");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("com.itextpdf.text.Document");
    _jspx_imports_classes.add("java.io.FileOutputStream");
    _jspx_imports_classes.add("java.io.File");
    _jspx_imports_classes.add("com.itextpdf.text.ListItem");
    _jspx_imports_classes.add("com.itextpdf.text.Element");
    _jspx_imports_classes.add("com.itextpdf.text.pdf.PdfWriter");
    _jspx_imports_classes.add("com.itextpdf.text.List");
    _jspx_imports_classes.add("codes.UserCredentials");
    _jspx_imports_classes.add("com.itextpdf.text.Paragraph");
    _jspx_imports_classes.add("com.itextpdf.text.pdf.PdfPTable");
    _jspx_imports_classes.add("com.itextpdf.text.Chunk");
    _jspx_imports_classes.add("com.itextpdf.text.BaseColor");
    _jspx_imports_classes.add("com.itextpdf.text.Image");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("    \r\n");
      out.write("   \r\n");
      out.write("    \r\n");
      out.write("     \r\n");
      out.write("      \r\n");
      out.write("       \r\n");
      out.write("        \r\n");
      out.write("         \r\n");
      out.write("          \r\n");
      out.write("          \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");



String uname=UserCredentials.getUsername();
String email=UserCredentials.getEmailId();
int uid=UserCredentials.getUserid();
Connection con=DBConnection.getDBConnection();
String total="0";
String uname1="",add="";
 try{
	  
	 
	PreparedStatement ps=con.prepareStatement("SELECT sum(total) as total_sum FROM cart WHERE userid ='"+uid+"' GROUP BY userid");
	
	ResultSet rs=ps.executeQuery();
	if(rs.next()){
		total=rs.getString("total_sum")+"";
		
	}
	PreparedStatement ps2=con.prepareStatement("select name,address from user_detail where userid='"+uid+"'");
	ResultSet rs2=ps2.executeQuery();
if(rs.next()){
	
	uname1=rs2.getString("name");
	add=rs2.getString("address");
}
	
	
} 
catch(Exception e){
	out.print(e);
}

	String name="bandhu";
	OutputStream file = new FileOutputStream(new File("D:\\Generate_Invoice_Bill\\"+uid+".pdf"));
	Document document = new Document();
	PdfWriter.getInstance(document, file);

	//Inserting Image in PDF
	    Image image = Image.getInstance ("C:\\Users\\Swati\\Desktop\\project stuff\\nameofwebsite.jpg");
	    image.scaleAbsolute(120f, 60f);//image width,height	

	//Inserting Table in PDF
	     document.open();
			        document.add(new Paragraph("With 3 columns:"));
			        PdfPTable table = new PdfPTable(3);
			        table.setSpacingBefore(5);
			        table.setWidths(new int[]{1, 1, 8});
			       
			        document.add(new Paragraph("With 2 columns:"));
			        table = new PdfPTable(6);
			       
			        table.setWidthPercentage(100);
			      
			        table.addCell("Product-Title");
			 	      table.addCell("MRP");
			 	      table.addCell("QTY");
			 	     table.addCell("DIS");
			 	    table.addCell("TEX");
			 	    table.addCell("Total");
			 	   String name1="",price="",qty1="",dis="",price1="";
			 		int mrp=0,qty=0,gd=0,mrp1=0;
	
    PreparedStatement ps = con.prepareStatement("SELECT cart.qty,cart.subtotal,product.price, cart.total, cart.shippingcharges, cart.productid, product.title,product.discount FROM cart,product WHERE cart.productid = product.productId and cart.userid = " +uid+ "");

	System.out.print("hallo");

    ResultSet rs = ps.executeQuery();
    while(rs.next())
    {                                
	name1=rs.getString("title");
	System.out.print("hallo"+name1);
	qty=rs.getInt("qty");
	qty1=Integer.toString(qty);
	mrp=rs.getInt("price");
	price=Integer.toString(mrp);
	mrp1=rs.getInt("total");
	price1=Integer.toString(mrp1);
	dis=rs.getString("discount");
	
	
	 table.addCell(name1);
	 table.addCell(price);
      table.addCell(qty1);
     table.addCell(dis);
    table.addCell("-");
    table.addCell(price1);
    
    String sql = "insert into invoice(unique_id,cid,p_name,date,total_amt,grand_total,name,email,qty,status) values (UUID(),?,'"+name1+"',now(),'"+price+"','"+price1+"',?,?,'"+qty+"',1)";
	  
	 PreparedStatement ps1=con.prepareStatement(sql);
	 ps1.setInt(1,uid);
	
	 
	 ps1.setString(2,uname);
	 ps1.setString(3,email);
	    
		int i=ps1.executeUpdate();
		if(i!=0){
			 PreparedStatement psd=con.prepareStatement("delete from cart where userid='"+uid+"'");
			 int qw=psd.executeUpdate();
		
    }
    }
    

    
    
   /*  PreparedStatement ps1=con.prepareStatement("insert into invoice (unique_id,cid,p_id,date,total_amt,grand_total,name,eamil)values(UUID(),'"+uid+"','"+p_id+"',now()");
    
	int i=ps1.executeUpdate();
	if(i!=0){
		out.print("Success");
	}  */
    

		 	    
		 	  
		 	      
		        table.getDefaultCell().setColspan(5);
		        table.addCell("Grand-Total");
		        table.addCell(total);
		       
		        document.add(table);
		        
		 	      
		 	      
		 	      
		 //Inserting List in PDF
		 	      List list=new List(true,30);
		          /* list.add(new ListItem("Java4s"));
		 	      list.add(new ListItem("Php4s"));
		 	      list.add(new ListItem("Some Thing..."));	 */	

		 //Text formating in PDF
		       Chunk chunk=new Chunk("Thank you for shopping with us");
		 		chunk.setUnderline(+1f,-2f);//1st co-ordinate is for line width,2nd is space between
		 		/* Chunk chunk1=new Chunk("Php4s.com"); */
		 		/* chunk1.setUnderline(+4f,-8f);
		 		chunk1.setBackground(new BaseColor (17, 46, 193));       */

		 //Now Insert Every Thing Into PDF Document
		     document.open();//PDF document opened........			       

		 		document.add(image);

		 		document.add(Chunk.NEWLINE);   //Something like in HTML :-)
			document.add(new Paragraph("Name:"+uname));
		       document.add(new Paragraph("Address:"+add));
		       document.add(new Paragraph("Stay MAlad(East)"));
		       document.add(new Paragraph("Date:"+new Date().toString()));	

		 		document.add(table);

		 		document.add(chunk);
		 		/* document.add(chunk1); */

		 		document.add(Chunk.NEWLINE);   //Something like in HTML :-)							    

		 			document.newPage();            //Opened new page
		 		document.add(list);            //In the new page we are going to add list

		     document.close();

		             file.close();

		 System.out.println("Pdf created successfully.."); 
		 
		response.sendRedirect("Send_Invoice");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
