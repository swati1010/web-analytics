/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M18
 * Generated at: 2017-04-20 10:26:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import codes.GetSetText;
import java.text.SimpleDateFormat;
import java.sql.*;
import codes.DBConnection;

public final class displaySuggestion_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("codes.DBConnection");
    _jspx_imports_classes.add("codes.GetSetText");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Admin</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"ass1/css/bootstrap.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"ass1/css/bootstrap-responsive.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"ass1/css/fullcalendar.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"ass1/css/matrix-style.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"ass1/css/matrix-media.css\" />\r\n");
      out.write("<link href=\"ass1/font-awesome/css/font-awesome.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"ass1/css/jquery.gritter.css\" />\r\n");
      out.write("<link href='http://fonts.googleapis.com/css?family=Open+Sans:400,700,800' rel='stylesheet' type='text/css'>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!--top-Header-menu-->\r\n");
      out.write("<div id=\"user-nav\" class=\"navbar navbar-inverse\">\r\n");
      out.write("  <ul class=\"nav\">\r\n");
      out.write("    <li id=\"profile-messages\" ><a title=\"\" href=\"#\" data-target=\"#profile-messages\" ><i class=\"icon icon-user\"></i>  <span class=\"text\">Welcome Admin</span><b class=\"caret\"></b></a>\r\n");
      out.write("     \r\n");
      out.write("    </li>\r\n");
      out.write("    <li class=\"\"><a title=\"\" href=\"index.jsp\"><i class=\"icon icon-share-alt\"></i> <span class=\"text\">Logout</span></a></li>\r\n");
      out.write("  </ul>\r\n");
      out.write("</div>\r\n");
      out.write("<!--close-top-Header-menu-->\r\n");
      out.write("<div id=\"header\">\r\n");
      out.write("  <h1><a href=\"#\">Admin</a></h1>\r\n");
      out.write("</div>\r\n");
      out.write("<!--sidebar-menu-->\r\n");
      out.write("<div id=\"sidebar\"><a href=\"#\" class=\"visible-phone\"><i class=\"icon icon-home\"></i> Dashboard</a>\r\n");
      out.write("  <ul>\r\n");
      out.write("    <li class=\"active\"><a href=\"adminindex.jsp\"><i class=\"icon icon-home\"></i> <span>Dashboard</span></a> </li>\r\n");
      out.write("    <li> <a href=\"addproduct.jsp\"><i class=\"icon icon-signal\"></i> <span>Add New Products</span></a> </li>\r\n");
      out.write("    <li> <a href=\"viewallproducts.jsp\"><i class=\"icon icon-signal\"></i> <span>View All Products</span></a> </li>\r\n");
      out.write("    <li><a href=\"sortedreviews.jsp\"><i class=\"icon icon-th\"></i> <span>Sorted Reviews</span></a></li>\r\n");
      out.write("     <li><a href=\"setdiscount.jsp\"><i class=\"icon icon-th\"></i> <span>Set Discount</span></a></li>\r\n");
      out.write("     <li><a href=\"setoffers.jsp\"><i class=\"icon icon-th\"></i> <span>Set Offers</span></a></li>\r\n");
      out.write("     <li><a href=\"invoicereports.jsp\"><i class=\"icon icon-th\"></i> <span>Invoice Details</span></a></li>\r\n");
      out.write("     <li><a href=\"revenue.jsp\"><i class=\"icon icon-th\"></i> <span>Revenue</span></a></li>\r\n");
      out.write("  </ul>\r\n");
      out.write("</div>\r\n");
      out.write("<!--sidebar-menu-->\r\n");
      out.write("\r\n");
      out.write("<!--main-container-part-->\r\n");
      out.write("<div id=\"content\">\r\n");
      out.write("<!--breadcrumbs-->\r\n");
      out.write("  <div id=\"content-header\">\r\n");
      out.write("    <div id=\"breadcrumb\"> <a href=\"index.html\" title=\"Go to Home\" class=\"tip-bottom\"><i class=\"icon-home\"></i> Home</a></div>\r\n");
      out.write("  </div>\r\n");
      out.write("<!--End-breadcrumbs-->\r\n");
      out.write("<div class=\"container-fluid\">\r\n");
      out.write("\r\n");
      out.write("    <hr>\r\n");
      out.write("    <div class=\"row-fluid\">\r\n");
      out.write("      <div class=\"span12\">\r\n");
      out.write("        <div class=\"widget-box\">\r\n");
      out.write("          <div class=\"widget-title\"> <span class=\"icon\"> <i class=\"icon-th\"></i> </span>\r\n");
      out.write("            <h5>Suggestion For product</h5>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"widget-content nopadding\">          \r\n");
      out.write("           ");

           Connection con = DBConnection.getDBConnection();
           try{
           	String mb[]={"Please Improve ram","improve the camera quality","memory space is low improve the memory storage","improve battery quality"};
           	String sp[]={"improve the shape","improve the audio performance","improve the sound quality speaker","improve battery quality"};
           	String hp[]={"improve the shape","improve the audio performance","improve the sound quality of speaker","Improve the wireless distance range"};
           	String pt[]={"improve quality of image print","improve the cartridge of the printer","improve the ink quality"};
           	
      out.write("\r\n");
      out.write("           \t<center>\r\n");
      out.write("           \t           \t<h3>Product suggestions</h3>\r\n");
      out.write("           \t      <table class=\"table table-bordered table-striped\" >\r\n");
      out.write("           \t <thead>\r\n");
      out.write("           \t<tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("           \t\t<th>Product-Name</th>\r\n");
      out.write("           \t\t<th>suggestions</th>\r\n");
      out.write("           \t\t\r\n");
      out.write("           \t</tr>\r\n");
      out.write("           \t</thead>\r\n");
      out.write("           \t<tbody>\r\n");
      out.write("           \t");

           	boolean trs=false;
           	int cou=0;
           	int p_type=0;
           	int crm=0;
           	int ccm=0,csp=0,cbty=0;
           	int ccm2=0,csp2=0,cbty2=0,crm2=0;
           	int ccm3=0,csp3=0,cbty3=0,crm3=0;
           	int ccm4=0,csp4=0,cbty4=0,crm4=0;
           	int ccm5=0,csp5=0,cbty5=0,crm5=0;

           	String pid="";
           	String name="";
           	PreparedStatement ps2=con.prepareStatement("select product.title,product.p_type,reviews.review, reviews.productid from reviews,product where nbprior='bad' and reviews.productId = product.productId ");
           	ResultSet rs2=ps2.executeQuery();
           	while(rs2.next()){
           		pid=rs2.getString("productid");	
           		
           	p_type=rs2.getInt("p_type");
           	
           			String mobile = rs2.getString("review");
           			
           			 //mobile
           			    
           		 if((mobile.contains("ram"))&&pid.equals(pid)&&p_type==1){		 
           			 crm++;	
           			 if(crm==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(mb[0] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           			 
           		 }
           		 if(mobile.contains("camera")&&pid.equals(pid)&&p_type==1){
           			 ccm++;
           			if(ccm==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(mb[1] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           		 }
           		 if(mobile.contains("storage")&&pid.equals(pid)&&p_type==1){
           			 csp++;
           			if(csp==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(mb[2] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           		 }
           		 if(mobile.contains("battery")&&pid.equals(pid)&&p_type==1){
           			 cbty++;
           			if(cbty==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(mb[3] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           		 }
           		 
           		 	//heaadphone2
           		 System.out.print(p_type);
           		 if((mobile.contains("shape"))&&pid.equals(pid)&&p_type==2){		 
           			 crm2++;	
           			if(crm2==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(hp[0] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           			 
           			 
           		 }
           		 if(mobile.contains("audio")&&pid.equals(pid)&&p_type==2){
           			 ccm2++;
           			 if(ccm2==2){
           				
      out.write("\r\n");
      out.write("                   \t\t<tr>\r\n");
      out.write("                   \t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("                   \t\t<td><label>");
      out.print(hp[1] );
      out.write("</label></td>\r\n");
      out.write("                   \t</tr>\r\n");
      out.write("\r\n");
      out.write("                   \t\t");

           			 }
           		 }
           		 if(mobile.contains("speaker")&&pid.equals(pid)&&p_type==2){
           			 csp2++;
           			if(csp2==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(hp[2] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           		 }
           		 if(mobile.contains("range")&&pid.equals(pid)&&p_type==2){
           			 cbty2++;
           			if(cbty2==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(hp[3] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           		 }
           		 //speaker
           		 
           		 if((mobile.contains("shape"))&&pid.equals(pid)&&p_type==3){		 
           			 crm3++;	
           			if(crm3==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(sp[0] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           			 
           		 }
           		 if(mobile.contains("audio")&&pid.equals(pid)&&p_type==3){
           			 ccm3++;
           			if(ccm3==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(sp[1] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           		 }
           		 if(mobile.contains("speaker")&&pid.equals(pid)&&p_type==3){
           			 csp3++;
           			if(csp3==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(sp[2] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           		 }
           		 if(mobile.contains("battery")&&pid.equals(pid)&&p_type==3){
           			 cbty3++;
           			if(cbty3==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(sp[3] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           		 }
           		 //laptop
           		 
           		 if((mobile.contains("ram"))&&pid.equals(pid)&&p_type==4){		 
           			 crm4++;	
           			if(crm4==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(mb[0] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           			 
           		 }
           		 if(mobile.contains("camera")&&pid.equals(pid)&&p_type==4){
           			 ccm4++;
           			if(ccm4==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(mb[1] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           			 
           		 }
           		 if(mobile.contains("storage")&&pid.equals(pid)&&p_type==4){
           			 csp4++;
           			if(csp4==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(mb[2] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           		 }
           		 if(mobile.contains("battery")&&pid.equals(pid)&&p_type==4){
           			 cbty4++;
           			if(cbty4==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(mb[3] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           		 }
           		 //printer
           		 if((mobile.contains("image"))&&pid.equals(pid)&&p_type==5){		 
           			 crm5++;	
           			if(crm5==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(pt[0] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           			 
           			 
           		 }
           		 if(mobile.contains("cartridge")&&pid.equals(pid)&&p_type==5){
           			 ccm5++;
           			if(ccm5==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(pt[1] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           		 }
           		 if(mobile.contains("ink")&&pid.equals(pid)&&p_type==5){
           			 csp5++;
           			if(csp5==3){
           				
      out.write("\r\n");
      out.write("           \t\t\t\t<tr>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(rs2.getString("title") );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t<td><label>");
      out.print(pt[2] );
      out.write("</label></td>\r\n");
      out.write("           \t\t\t\t\r\n");
      out.write("           \t\t\t</tr>\r\n");
      out.write("           \t\t\t\t");

           			 }
           		 }
           		 if(mobile.contains("battery")&&pid.equals(pid)&&p_type==5){
           			 cbty5++;
           		 }
           		
           		
           		 
           		 
           	} 
           	}
           	catch(Exception e){
           		out.print(e);
           	}
           	
      out.write("\r\n");
      out.write("           \r\n");
      out.write("          \r\n");
      out.write("          </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          </div>\r\n");
      out.write("           \r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("<!--end-main-container-part-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"ass1/js/excanvas.min.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/jquery.min.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/jquery.ui.custom.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/bootstrap.min.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/jquery.flot.min.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/jquery.flot.resize.min.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/jquery.peity.min.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/fullcalendar.min.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/matrix.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/matrix.dashboard.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/jquery.gritter.min.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/matrix.interface.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/matrix.chat.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/jquery.validate.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/matrix.form_validation.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/jquery.wizard.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/jquery.uniform.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/select2.min.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/matrix.popover.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/jquery.dataTables.min.js\"></script> \r\n");
      out.write("<script src=\"ass1/js/matrix.tables.js\"></script> \r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  // This function is called from the pop-up menus to transfer to\r\n");
      out.write("  // a different page. Ignore if the value returned is a null string:\r\n");
      out.write("  function goPage (newURL) {\r\n");
      out.write("\r\n");
      out.write("      // if url is empty, skip the menu dividers and reset the menu selection to default\r\n");
      out.write("      if (newURL != \"\") {\r\n");
      out.write("      \r\n");
      out.write("          // if url is \"-\", it is this page -- reset the menu:\r\n");
      out.write("          if (newURL == \"-\" ) {\r\n");
      out.write("              resetMenu();            \r\n");
      out.write("          } \r\n");
      out.write("          // else, send page to designated URL            \r\n");
      out.write("          else {  \r\n");
      out.write("            document.location.href = newURL;\r\n");
      out.write("          }\r\n");
      out.write("      }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("// resets the menu selection upon entry to this page:\r\n");
      out.write("function resetMenu() {\r\n");
      out.write("   document.gomenu.selector.selectedIndex = 2;\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
